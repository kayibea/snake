var G=Object.defineProperty;var k=(r,t,e)=>t in r?G(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var o=(r,t,e)=>k(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();HTMLElement.prototype.setVisible=function(r){r?this.classList.remove("hidden"):this.classList.add("hidden")};HTMLElement.prototype.isVisible=function(){return this.classList.contains("hidden")};class a{constructor(t=0,e=0){this.x=t,this.y=e}get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}get normalized(){const t=this.length;return new a(this.x/t,this.y/t)}setXY(t,e){this.x=t,this.y=e}add(t){return new a(this.x+t.x,this.y+t.y)}sub(t){return new a(this.x-t.x,this.y-t.y)}mul(t){return new a(this.x*t,this.y*t)}clone(){return new a(this.x,this.y)}equals(t){return this.x===t.x&&this.y===t.y}isSameDirection(t){const e=this.normalized,s=t.normalized;return e.x===s.x&&e.y===s.y}static get top(){return new a(0,-1)}static get left(){return new a(-1,0)}static get down(){return new a(0,1)}static get right(){return new a(1,0)}static randomUnitVector(){return[a.top,a.left,a.down,a.right][T(0,3)]}toString(){return`Vector2(${this.x}, ${this.y})`}}const m=(r,t,e)=>Math.min(Math.max(r,t),e),T=(r,t)=>Math.floor(Math.random()*(t-r+1))+r,v=r=>/^[a-zA-Z]$/.test(r)?r.toLowerCase():r,g={ArrowUp:"ArrowUp",ArrowDown:"ArrowDown",ArrowLeft:"ArrowLeft",ArrowRight:"ArrowRight",W:"w",A:"a",S:"s",D:"d",Space:" "},C=new Map([[g.W,a.top],[g.S,a.down],[g.A,a.left],[g.D,a.right],[g.ArrowUp,a.top],[g.ArrowDown,a.down],[g.ArrowLeft,a.left],[g.ArrowRight,a.right]]);class H{constructor(t){this.position=t}}const h=class h{constructor(t,e,s,i=1){o(this,"_hue");o(this,"_saturation");o(this,"_lightness");o(this,"_alpha");this._hue=m(t,h.HUE_MIN,h.HUE_MAX),this._saturation=m(e,h.SATURATION_MIN,h.SATURATION_MAX),this._lightness=m(s,h.LIGHTNESS_MIN,h.LIGHTNESS_MAX),this._alpha=m(i,h.ALPHA_MIN,h.ALPHA_MAX)}get hue(){return this._hue}get saturation(){return this._saturation}get lightness(){return this._lightness}get alpha(){return this._alpha}set hue(t){this._hue=m(t,h.HUE_MIN,h.HUE_MAX)}set saturation(t){this._saturation=m(t,h.SATURATION_MIN,h.SATURATION_MAX)}set lightness(t){this._lightness=m(t,h.LIGHTNESS_MIN,h.LIGHTNESS_MAX)}set alpha(t){this._alpha=m(t,h.ALPHA_MIN,h.ALPHA_MAX)}clone(){return new h(this.hue,this.saturation,this.lightness,this.alpha)}toString(){return`hsla(${this.hue}, ${this.saturation}%, ${this.lightness}%, ${this.alpha})`}};o(h,"HUE_MIN",0),o(h,"HUE_MAX",360),o(h,"SATURATION_MIN",0),o(h,"SATURATION_MAX",100),o(h,"LIGHTNESS_MIN",0),o(h,"LIGHTNESS_MAX",100),o(h,"ALPHA_MIN",0),o(h,"ALPHA_MAX",1);let M=h;const u=class u{constructor(t,e=a.right,s=u.SNAKE_BASE_BODY_LENGTH){o(this,"_body");o(this,"isMoving");o(this,"lastMoveTime");this.isMoving=!1,this.lastMoveTime=0,this._body=[new w(t,e)];for(let i=1;i<s;i++)this.grow()}get head(){return this._body[0]}get body(){return this._body.slice(1)}move(t){if(!this.canMove(t))return;this.isMoving=!this.isMoving;const e=this.head,s=e.position.add(e.direction);this._body.unshift(new w(s,e.direction)),this._body.pop(),this.lastMoveTime=t,this.isMoving=!this.isMoving}canMove(t){const e=t-this.lastMoveTime,s=this.calculateMoveInterval();return e>s}grow(){const t=this._body[this._body.length-1],e=t.position.sub(t.direction);this._body.push(new w(e,t.direction))}calculateMoveInterval(){const t=this._body.length;let s=u.MIN_MOVE_INTVL+t*5;return s=Math.max(u.MIN_MOVE_INTVL,Math.min(s,u.MAX_MOVE_INTVL)),s}didTheSnakeBiteItself(){return this.body.some(({position:t})=>this.head.position.equals(t))}changeDirection(t){!this.isMoving&&!t.isSameDirection(this.head.direction.normalized)&&!t.isSameDirection(this.head.direction.normalized.mul(-1))&&this.head.direction.setXY(t.x,t.y)}handleKeyPress(t){const e=C.get(v(t.key));e&&this.changeDirection(e)}toString(){return this._body.map((t,e)=>`Segment ${e}: Position (${t.position.x}, ${t.position.y}), Direction (${t.direction.x}, ${t.direction.y})`).join(`
`)}};o(u,"MIN_MOVE_INTVL",30),o(u,"MAX_MOVE_INTVL",60),o(u,"SNAKE_BASE_BODY_LENGTH",4),o(u,"SNAKE_COLOR",new M(120,100,50)),o(u,"SNAKE_BODY_ALPHA",.7);let f=u;class w{constructor(t,e){o(this,"position");o(this,"direction");this.position=new a(t.x,t.y),this.direction=new a(e.x,e.y)}}const d=class d extends HTMLCanvasElement{constructor(){super();o(this,"_isGameOver");o(this,"_isGamePaused");o(this,"rows");o(this,"cols");o(this,"snake");o(this,"foods");o(this,"ctx");({width:this.width,height:this.height}=d.getDynamicSize()),this.cols=Math.floor(this.width/d.TARGET_CELL_SIZE),this.rows=Math.floor(this.height/d.TARGET_CELL_SIZE),this.foods=[],this._isGameOver=!1,this._isGamePaused=!1,this.ctx=this.getContext("2d"),this.snake=new f(this.getCenterPosition(),a.randomUnitVector()),this.spawnFood()}get isGameOver(){return this._isGameOver}get score(){return this.snake.body.length-f.SNAKE_BASE_BODY_LENGTH+1}get isGamePaused(){return this._isGamePaused}toggleGamePause(){this._isGamePaused=!this._isGamePaused}update(e){if(this.isGamePaused)return;const s=this.snake;this._isGameOver=s.didTheSnakeBiteItself(),this.checkSnakeChomp(),this.teleportSnakeIfOutOfBounds(),s.move(e)}render(){this.isGamePaused||(this.ctx.clearRect(0,0,this.width,this.height),this.drawSnake(),this.drawFoods())}static getDynamicSize(){let e=Math.min(Math.max(window.innerWidth*.7,d.MIN_SIZE),d.MAX_SIZE),s=Math.min(Math.max(window.innerHeight*.7,d.MIN_SIZE),d.MAX_SIZE);return e=Math.floor(e/2)*2,s=Math.floor(s/2)*2,{width:e,height:s}}getCellSize(){return{cellWidth:this.width/this.cols,cellHeight:this.height/this.rows}}getCenterPosition(){return new a(Math.floor(this.cols/2),Math.floor(this.rows/2))}teleportSnakeIfOutOfBounds(){const e=this.snake.head,{x:s,y:i}=e.position;e.position.x=(s+this.cols)%this.cols,e.position.y=(i+this.rows)%this.rows}drawGrid(){const{cellWidth:e,cellHeight:s}=this.getCellSize();for(let i=0;i<this.rows;i++)for(let n=0;n<this.cols;n++)this.ctx.strokeStyle="#e0e0e0",this.ctx.strokeRect(n*e,i*s,e,s)}spawnFood(){const e=new Set,s=this.snake;e.add(`${s.head.position.x},${s.head.position.y}`);for(const n of s.body)e.add(`${n.position.x},${n.position.y}`);for(const n of this.foods)e.add(`${n.position.x},${n.position.y}`);const i=[];for(let n=0;n<this.cols;n++)for(let c=0;c<this.rows;c++)e.has(`${n},${c}`)||i.push(new a(n,c));if(i.length>0){const n=T(0,i.length),c=i[n];this.foods.push(new H(c))}else console.log("No empty cells available for new food!")}drawSnake(){const e=this.snake,{cellWidth:s,cellHeight:i}=this.getCellSize();this.ctx.fillStyle=f.SNAKE_COLOR.toString();const n=e.head.position.x,c=e.head.position.y;this.ctx.fillRect(n*s,c*i,s,i);const I=f.SNAKE_COLOR.clone();I.alpha=f.SNAKE_BODY_ALPHA,this.ctx.fillStyle=I.toString();for(const E of e.body){const _=E.position.x,P=E.position.y;this.ctx.fillRect(_*s,P*i,s,i)}}drawFoods(){const{cellWidth:e,cellHeight:s}=this.getCellSize();this.ctx.fillStyle=f.SNAKE_COLOR.toString();for(const i of this.foods){const n=i.position.x,c=i.position.y;this.ctx.fillRect(n*e,c*s,e,s)}}handleKeyPress(e){this.isGamePaused||this.snake.handleKeyPress(e)}checkSnakeChomp(){const e=this.snake.head.position;for(let s=0;s<this.foods.length;s++)if(this.foods[s].position.equals(e)){this.snake.grow(),this.foods.splice(s,1),this.spawnFood();break}}};o(d,"MIN_SIZE",300),o(d,"MAX_SIZE",1200),o(d,"TARGET_CELL_SIZE",10);let y=d;customElements.define("custom-board",y,{extends:"canvas"});const O=document.getElementById("game-over-screen"),B=document.getElementById("game-over-message"),R=document.getElementById("final-score"),X=document.getElementById("restart-button"),p=document.getElementById("countdown"),$=document.getElementById("splash-screen"),x=document.getElementById("pause-screen"),D=document.getElementById("start-button"),U=document.getElementById("score"),N=["Oops! Snake got a taste of itself!","Snake was feeling... snacky.","It's a wrap! Snake tied itself in knots.","That's what happens when you’re too into yourself!","Looks like snake couldn’t resist a bite!","Mmm... tastes like chicken? Not quite.","Self-love has its limits. Game over!"];let l,b;function S(r){if(l.isGameOver){K(),cancelAnimationFrame(b);return}l.update(r),l.render(),b=requestAnimationFrame(S)}function K(){const r=N[Math.floor(Math.random()*N.length)];B.innerText=r,R.innerText=l.score.toString(),O.setVisible(!0)}function z(){!p.isVisible()||l.isGameOver||(l.isGamePaused?(x.setVisible(!1),A(()=>l.toggleGamePause())):(l.toggleGamePause(),U.innerText=l.score.toString(),x.setVisible(!0)))}function A(r){let t=3;p.setVisible(!0),p.innerText=t.toString();const e=setInterval(()=>{t--,t>0?p.innerText=t.toString():t===0?p.innerText="Go!":(clearInterval(e),p.setVisible(!1),r())},1e3)}function L(){var r;(r=document.getElementById("board"))==null||r.remove(),l=new y,l.setVisible(!1),l.setAttribute("id","board"),l.setAttribute("is","custom-board"),l.render(),document.body.appendChild(l)}D.addEventListener("click",()=>{L(),l.setVisible(!0),$.setVisible(!1),A(S)});X.addEventListener("click",()=>{O.setVisible(!1),L(),l.setVisible(!0),A(S)});window.addEventListener("keypress",r=>{switch(v(r.key)){case g.Space:z();break;default:l.handleKeyPress(r)}});
